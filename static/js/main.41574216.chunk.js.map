{"version":3,"sources":["components/Form/StyledFormComponents.jsx","redux/items/items-actions.js","components/Form/form-helper.js","components/Form/Form.jsx","components/Contacts/StyledContactsComponents.jsx","components/AppComponents/AppComponents.jsx","components/Contacts/Contacts.jsx","components/Filter/StyledFilterComponents.jsx","redux/filter/filter-actions.js","components/Filter/Filter.jsx","App.js","reportWebVitals.js","redux/filter/filter-reducer.js","redux/items/items-reducer.js","redux/store.js","index.js"],"names":["StyledForm","styled","form","StyledTitle","h1","StyledLable","label","StyledInput","input","StyledButton","button","ADD","createAction","name","number","payload","id","uuidv4","ADD_MUTIPLY_CONTACTS","REMOVE","REMOVE_ALL","toastMessage","type","text","message","toast","success","warn","error","dark","useInput","useState","value","setValue","useEffect","match","pattern","length","isValidInput","current","style","connect","contacts","items","filter","dispatch","onNewContactAdd","nameInput","useRef","numberInput","setName","setNumber","onInputChange","event","target","onSubmit","searchName","preventDefault","find","title","placeholder","required","ref","onChange","StyledSubTitle","h2","StyledDiv","div","StyledList","ul","StyledItem","li","StyledName","p","StyledNumber","StyledApp","section","StyledBanner","applyFilter","searchStr","toLowerCase","contact","includes","removeSingleContact","removeAllContacts","makeContactsList","map","onClick","backgroundColor","StyledLabel","setFilter","onFilterChange","disabled","addMultiplyContacts","contactsList","contactsFromLocalStorage","JSON","parse","localStorage","getItem","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","console","log","filterReducer","createReducer","_","toString","itemsReducer","state","item","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41574216.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n\n  margin-bottom: 1.5rem;\n`;\n\nexport const StyledTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  color: #2db57f;\n  font-size: 2rem;\n  margin-bottom: 1rem;\n\n  text-shadow: 1px 1px 1px -2px rgba(0, 0, 0, 0.56);\n`;\n\nexport const StyledLable = styled.label`\n  text-transform: uppercase;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  color: #2db57f;\n\n  display: flex;\n  align-self: flex-end;\n  align-items: center;\n  justify-content: space-between;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n\n  &:last-of-type {\n    margin-bottom: 2rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  margin-left: 0.75rem;\n  display: block;\n\n  min-width: 330px;\n  height: 2rem;\n  font-size: 1.25rem;\n  font-weight: 400;\n  padding: 0.5rem 0.5rem 0.25rem;\n\n  border: 0;\n  border-bottom: 1px solid #c15ae0;\n  color: #1f2120;\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-box-shadow: 0 0 0 30px #ffffff inset !important;\n  }\n\n  &:focus {\n    outline-color: #c15ae0;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  width: 250px;\n  align-self: center;\n  padding: 0.5rem 1rem;\n  border: 1px solid #c15ae0;\n  border-radius: 0.5rem;\n\n  font-size: 1.5rem;\n\n  text-transform: uppercase;\n\n  color: #c15ae0;\n  background: transparent;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out, box-shadow 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-0.15rem);\n    box-shadow: 2px 2px 5px -2px rgba(0, 0, 0, 0.56);\n  }\n`;\n","// import { itemsTypes } from './items-types';\nimport { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const ADD = createAction('items/add', (name, number) => {\n  const id = uuidv4();\n  return {\n    payload: { id, name, number },\n  };\n});\n\nexport const ADD_MUTIPLY_CONTACTS = createAction('items/add_multiply_contacts');\n\nexport const REMOVE = createAction('items/remove');\n\nexport const REMOVE_ALL = createAction('items/remove_all');\n\n// export const ADD = (name, number) => {\n//   const id = uuidv4();\n//   return {\n//     type: itemsTypes.ADD,\n//     payload: { id, name, number },\n//   };\n// };\n\n// export const ADD_MUTIPLY_CONTACTS = (contactsList) => ({\n//   type: itemsTypes.ADD_MUTIPLY_CONTACTS,\n//   payload: contactsList,\n// });\n\n// export const REMOVE = (item) => ({\n//   type: itemsTypes.REMOVE,\n//   payload: item,\n// });\n\n// export const REMOVE_ALL = () => ({\n//   type: itemsTypes.REMOVE_ALL,\n//   payload: [],\n// });\n","import { toast } from 'react-toastify';\n\nexport const toastMessage = (type, text) => {\n  let message = null;\n  switch (type) {\n    case 'success':\n      message = () => toast.success(text);\n      break;\n\n    case 'warn':\n      message = () => toast.warn(text);\n      break;\n\n    case 'error':\n      message = () => toast.error(text);\n      break;\n\n    default:\n      message = () => toast.dark(text);\n  }\n\n  message();\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  StyledForm,\n  StyledTitle,\n  StyledLable,\n  StyledInput,\n  StyledButton as StyledPrimaryButton,\n} from './StyledFormComponents';\nimport { connect } from 'react-redux';\nimport { ADD } from '../../redux/items/items-actions';\nimport { toastMessage } from './form-helper';\n\nconst useInput = (input) => {\n  const [value, setValue] = useState(() => '');\n\n  useEffect(() => {\n    function isValidInput(input) {\n      if (!input.value.match(input.pattern) && input.value.length) return false;\n\n      return true;\n    }\n\n    if (!isValidInput(input.current)) {\n      input.current.style = 'background-color: #f7d7d7;';\n    } else {\n      input.current.style = 'background-color: transparent;';\n    }\n  }, [value, input]);\n\n  return [value, setValue];\n};\n\nfunction Form({ onNewContactAdd, contacts: { items } }) {\n  const nameInput = useRef();\n  const numberInput = useRef();\n\n  const [name, setName] = useInput(nameInput);\n  const [number, setNumber] = useInput(numberInput);\n\n  //#region methods\n  const onInputChange = (event) => {\n    switch (event.target.name) {\n      case 'name':\n        setName(event.target.value);\n        break;\n\n      case 'number':\n        setNumber(event.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const clearInputs = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const isNameInContacts = (searchName) => items.find(({ name }) => name === searchName);\n\n  const submitNewContact = (event) => {\n    event.preventDefault();\n\n    if (isNameInContacts(name)) {\n      toastMessage('warn', `There is an existing contact with name \"${name}\"!`);\n      return;\n    }\n\n    onNewContactAdd(name, number);\n\n    toastMessage('success', `New contact \"${name}\" was added!`);\n\n    clearInputs();\n  };\n  //#endregion\n\n  return (\n    <>\n      <StyledTitle>Phonebook</StyledTitle>\n      <StyledForm onSubmit={submitNewContact}>\n        <StyledLable>\n          Name\n          <StyledInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Please, type contact name\"\n            required\n            value={name}\n            ref={nameInput}\n            onChange={onInputChange}\n          />\n        </StyledLable>\n        <StyledLable>\n          Number\n          <StyledInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Please, type contact number\"\n            required\n            value={number}\n            ref={numberInput}\n            onChange={onInputChange}\n          />\n        </StyledLable>\n        <StyledPrimaryButton type=\"submit\">Add contact</StyledPrimaryButton>\n      </StyledForm>\n    </>\n  );\n}\n\nForm.propTypes = {\n  onNewContactAdd: PropTypes.func,\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: {\n    items,\n    filter,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onNewContactAdd: (name, number) => dispatch(ADD(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import styled from 'styled-components';\n\nexport const StyledSubTitle = styled.h2`\n  color: #2db57f;\n  text-transform: uppercase;\n  margin-bottom: 1rem;\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n\n  padding: 1rem 1.5rem;\n  background-color: #d6d6d6;\n`;\n\nexport const StyledButton = styled.button`\n  align-self: center;\n  padding: 0.25rem 0.75rem;\n  border: 1px solid #c15ae0;\n  border-radius: 0.5rem;\n\n  font-size: 0.75rem;\n\n  text-transform: uppercase;\n\n  color: #c15ae0;\n  background: #ffffff;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out, box-shadow 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    transform: translateY(-0.1rem);\n    box-shadow: 2px 2px 5px -2px rgba(0, 0, 0, 0.56);\n  }\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  list-style: none;\n\n  margin-bottom: 1rem;\n`;\n\nexport const StyledItem = styled.li`\n  width: 100%;\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n\n  background-color: #ffffff;\n\n  padding: 0.5rem 1rem;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const StyledName = styled.p`\n  font-size: 1rem;\n  font-weight: 600;\n\n  display: block;\n  min-width: 40%;\n`;\n\nexport const StyledNumber = styled.p`\n  font-size: 1rem;\n  font-weight: 600;\n  display: block;\n  min-width: 35%;\n  color: #2db57f;\n`;\n","import styled from \"styled-components\";\n\nexport const StyledApp = styled.section`\n  background-color: #ffffff;\n  border: 1px solid #c15ae0;\n  border-radius: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem 1.5rem;\n\n  width: 100%;\n\n  box-shadow: 7px 7px 15px -8px rgba(0, 0, 0, 0.56);\n`;\n\nexport const StyledBanner = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n\n  padding: 1rem 1.5rem;\n  color: #fafafa;\n  text-transform: uppercase;\n  font-weight: 600;\n  font-size: 1.5rem;\n\n  background-color: #d6d6d6;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  StyledItem,\n  StyledName,\n  StyledNumber,\n  StyledDiv,\n  StyledList,\n  StyledSubTitle,\n  StyledButton,\n} from './StyledContactsComponents';\n\nimport { StyledBanner } from '../AppComponents/AppComponents';\n\nimport { StyledButton as StyledPrimaryButton } from '../Form/StyledFormComponents';\nimport { connect } from 'react-redux';\nimport { REMOVE, REMOVE_ALL } from '../../redux/items/items-actions';\n\nconst Contacts = ({ contacts: { items }, removeSingleContact, removeAllContacts }) => {\n  const makeContactsList = items.map(({ name, number, id }) => {\n    return (\n      <StyledItem key={id}>\n        <StyledName>{name}</StyledName>\n        <StyledNumber>{number}</StyledNumber>\n        <StyledButton onClick={removeSingleContact} value={id}>\n          Remove\n        </StyledButton>\n      </StyledItem>\n    );\n  });\n\n  return (\n    <StyledDiv>\n      {items.length === 0 ? (\n        <StyledBanner>No contacts...</StyledBanner>\n      ) : (\n        <>\n          <StyledSubTitle>Contacts</StyledSubTitle>\n          <StyledList>{makeContactsList}</StyledList>\n          <StyledPrimaryButton onClick={removeAllContacts} style={{ backgroundColor: '#FAFAFA' }}>\n            Remove all\n          </StyledPrimaryButton>\n        </>\n      )}\n    </StyledDiv>\n  );\n};\n\nContacts.propTypes = {\n  deleteContact: PropTypes.func,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n\nconst applyFilter = (items, filter) => {\n  if (filter === '') {\n    return items;\n  }\n\n  const searchStr = filter.toLowerCase();\n  const filteredContacts = items.filter((contact) => contact.name.toLowerCase().includes(searchStr));\n  return filteredContacts;\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: {\n    items: applyFilter(items, filter),\n    filter,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeSingleContact: (event) => dispatch(REMOVE(event.target.value)),\n  removeAllContacts: () => dispatch(REMOVE_ALL()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import styled from \"styled-components\";\n\nexport const StyledLabel = styled.label`\n  text-transform: uppercase;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  color: #2db57f;\n\n  display: flex;\n  align-self: flex-end;\n  align-items: center;\n  justify-content: space-between;\n\n  &:not(:last-of-type) {\n    margin-bottom: 1rem;\n  }\n\n  &:last-of-type {\n    margin-bottom: 2rem;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  margin-left: 0.75rem;\n  display: block;\n  min-width: 350px;\n  height: 2rem;\n  font-size: 1.25rem;\n  font-weight: 400;\n  padding: 0.5rem 0.5rem 0.25rem;\n\n  border: 0;\n  border-bottom: 1px solid #c15ae0;\n  color: #1f2120;\n\n  &:-webkit-autofill,\n  &:-webkit-autofill:hover,\n  &:-webkit-autofill:focus,\n  &:-webkit-autofill:active {\n    -webkit-box-shadow: 0 0 0 30px #ffffff inset !important;\n  }\n\n  &:focus {\n    outline-color: #c15ae0;\n  }\n\n  &:disabled {\n    border: 1px solid #e1e8e5;\n  }\n`;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const setFilter = createAction('filter/set');\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { StyledInput, StyledLabel } from './StyledFilterComponents';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { setFilter } from '../../redux/filter/filter-actions';\n// import * as filterActions from '../../redux/filter/filter-actions';\n\nconst Filter = ({ onFilterChange, contacts: { items, filter } }) => {\n  return (\n    <div>\n      <StyledLabel>\n        Search\n        <StyledInput\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Please, type search name\"\n          value={filter}\n          onChange={onFilterChange}\n          disabled={items.length ? false : true}\n        />\n      </StyledLabel>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: {\n    items,\n    filter,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFilterChange: (event) => dispatch(setFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { useEffect } from 'react';\nimport Form from './components/Form/Form';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\nimport { ToastContainer } from 'react-toastify';\n\nimport { StyledApp } from './components/AppComponents/AppComponents';\nimport { connect } from 'react-redux';\nimport { ADD_MUTIPLY_CONTACTS } from './redux/items/items-actions';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App({ contacts: { items }, addMultiplyContacts }) {\n  //#region methods\n  useEffect(() => {\n    const contactsFromLocalStorage = JSON.parse(localStorage.getItem('contacts'));\n\n    if (contactsFromLocalStorage) {\n      addMultiplyContacts(contactsFromLocalStorage);\n    }\n  }, [addMultiplyContacts]);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(items));\n  }, [items]);\n\n  //#endregion\n\n  return (\n    <StyledApp>\n      <Form />\n      <Filter />\n      <Contacts />\n      <ToastContainer />\n    </StyledApp>\n  );\n}\n\nconst mapStateToProps = ({ contacts: { items } }) => ({\n  contacts: {\n    items,\n  },\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addMultiplyContacts: (contactsList) => dispatch(ADD_MUTIPLY_CONTACTS(contactsList)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { setFilter } from './filter-actions';\n\nconsole.log();\n\nexport const filterReducer = createReducer('', {\n  [setFilter]: (_, { payload }) => payload.toString(),\n});\n\n//#region BEFORE REFACTOR\n// import { filterTypes } from './filter-types';\n\n// export const filterReducer = (filter = '', { type, payload }) => {\n//   switch (type) {\n//     case filterTypes.CLEAR:\n//     case filterTypes.SET:\n//       return (filter = payload);\n\n//     default:\n//       return filter;\n//   }\n// };\n//#endregion\n","import { createReducer } from '@reduxjs/toolkit';\n// import { itemsTypes } from './items-types';\nimport { ADD, ADD_MUTIPLY_CONTACTS, REMOVE, REMOVE_ALL } from './items-actions';\n\nexport const itemsReducer = createReducer([], {\n  [ADD]: (state, { payload }) => [...state, payload],\n  [ADD_MUTIPLY_CONTACTS]: (state, { payload }) => [...state, ...payload],\n  [REMOVE]: (state, { payload }) => state.filter((item) => item.id !== payload),\n  [REMOVE_ALL]: () => [],\n});\n\n// export const itemsReducer = (items = [], { type, payload }) => {\n// switch (type) {\n// case itemsTypes.ADD:\n// return [...items, payload];\n//\n// case itemsTypes.ADD_MUTIPLY_CONTACTS:\n// return [...items, ...payload];\n//\n// case itemsTypes.REMOVE:\n// return items.filter((item) => item.id !== payload);\n//\n// case itemsTypes.REMOVE_ALL:\n// return [];\n//\n// default:\n// return items;\n// }\n// };\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { filterReducer } from './filter/filter-reducer';\nimport { itemsReducer } from './items/items-reducer';\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: '',\n  },\n};\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport { initialState, store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}